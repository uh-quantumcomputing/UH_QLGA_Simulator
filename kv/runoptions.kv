#todo fix checkbox and radio button canvas sizes on different pixel densities
<RunOptions>:
    name: "runoptions"
#    canvas.before:
#        Color:
#            rgb: .6, .6, .6
#        Rectangle:
#            size: self.size
#            source: '/background.png'

    # this below is variables in the .py file being assigned to the id's
    # below in the .kv file here to allow them to be referenced in the core code
    # format below is "[.py variable name]: [id name in .kv file]"

    batch: batch
    runSolutions: runSolutions


    FloatLayout:
        Label:
            text: "[size=35dp][b]QLGA SIMULATOR[/b][/size]\n\n[size=20dp][b]Run Options[/b][/size]"
            markup: True
            size_hint: (0.75, 0.5)
            pos_hint: {'center': (0.5, 0.75)}
            halign: 'center'
#todo convert directory and name from textinput to directory finder
        Label:
            text: "Experiment Directory: "
            pos_hint: {'center': (0.15, .5)}

        TextInput:
            id: batch
            multiline: False
            size_hint: (0.2, 0.05)
            pos_hint: {'center': (0.35, 0.5)}

        Label:
            text: "Experiment Name: "
            pos_hint: {'center': (0.15, .4)}

        TextInput:
            id: runSolutions
            size_hint: (0.2, 0.05)
            pos_hint: {'center': (0.35, 0.4)}


        Label:
            text: "[b][size=20dp]Devices: [/b][/size]"
            markup: True
            pos_hint: {'center': (0.6, 0.5)}



        Label:
            text: "1 GPU"
            pos_hint: {'center': (0.7, 0.5)}
            font_size: '15dp'

        CheckBox:
            canvas.before:
                Color:
                    rgb: 30,35,38
                Ellipse:
                    pos:self.center_x-11, self.center_y-11
                    size:[22,22]
                Color:
                    rgb: 0,0,0
                Ellipse:
                    pos:self.center_x-10, self.center_y-10
                    size:[20,20]
            on_active: root.oneGPU_click(self, self.active)
            size_hint: (0.15,0.15)
            pos_hint:{'center': (0.75, 0.5)}
            group: "GPUS"

        Label:
            text: "2 GPUS"
            pos_hint: {'center': (0.7, 0.4)}
            font_size: '15dp'

        CheckBox:
            canvas.before:
                Color:
                    rgb: 30,35,38
                Ellipse:
                    pos:self.center_x-11, self.center_y-11
                    size:[22,22]
                Color:
                    rgb: 0,0,0
                Ellipse:
                    pos:self.center_x-10, self.center_y-10
                    size:[20,20]
            on_active: root.twoGPU_click(self, self.active)
            size_hint: (0.15,0.15)
            pos_hint:{'center': (0.75, 0.4)}
            group: "GPUS"

        Label:
            text: "Overwrite Previous Data"
            pos_hint: {'center': (0.35, 0.2)}

        CheckBox:
            pos_hint: {'center': (0.2, 0.5)}
            canvas.before:
                Color:
                    rgb: 30,35,38
                Rectangle:
                    pos:self.center_x-11, self.center_y-11
                    size:[22,22]
                Color:
                    rgb: 0,0,0
                Rectangle:
                    pos:self.center_x-10, self.center_y-10
                    size:[20,20]
            on_active: root.overwrite_click(self, self.active)
            pos_hint: {'center': (0.5, 0.2)}
            size_hint: (0.05,0.05)

        Button:
            text: '[size=15dp][b]<-[/b][/size] Go Back'
            markup: True
            size_hint: (0.15, 0.05)
            pos_hint: {'center': (0.15, 0.07)}
            on_release:
                app.root.current = "simulationparameters"
                root.manager.transition.direction = "right"

        Button:
            text: 'Next Page [b][size=15dp]->[/b][/size]'
            markup:True
            size_hint: (0.15, 0.05)
            pos_hint: {'center': (0.85, 0.07)}
            on_press: root.next_button()
            on_release:
                app.root.current = "physicsmodel"
                root.manager.transition.direction = "left"
